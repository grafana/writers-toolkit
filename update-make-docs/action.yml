name: Update `make docs` procedure
description: This action updates the `make docs` script and related Makefiles.
inputs:
  branch:
    default: update-make-docs
    description: Name of remote branch to push changes to. Should be unique to avoid conflict with user-created branches.
    required: false
  directory:
    default: docs
    description: Directory within the repository that should contain the script and related Makefiles.
    required: false
  pr_options:
    description: Additional command line options provided to the `gh pr create` command.
    required: false
  token:
    default: ${{ github.token }}
    description: Used to open the PR.
    required: false
  trace:
    default: false
    description: Print command traces.
    required: false
    type: boolean
runs:
  using: composite
  steps:
  - env:
      BRANCH: ${{ inputs.branch }}
      DIRECTORY: ${{ inputs.directory }}
      GITHUB_TOKEN: ${{ inputs.github_token }}
      PR_OPTIONS: ${{ inputs.pr_options }}
    name: Update `make docs` procedure
    run: |
      if ${{ inputs.trace }}; then
        set -x
      fi

      # If the branch already exists in the remote, the job of the script is to update that branch.
      # Otherwise, it should create a new branch.
      if git fetch origin "${BRANCH}"; then
        git checkout "${BRANCH}"
      else
        git checkout -b "${BRANCH}"
      fi

      # Fetch the Makefiles and script.
      curl -s -Lo "${DIRECTORY}/docs.mk" https://raw.githubusercontent.com/grafana/writers-toolkit/main/docs/docs.mk
      curl -s -Lo "${DIRECTORY}/make-docs" https://raw.githubusercontent.com/grafana/writers-toolkit/main/docs/make-docs

      # Add and commit files if there are changes.
      if ! git diff --exit-code; then
        # Commit the updated files as the Grafanabot GitHub user.
        git add .
        git config --local user.email "bot@grafana.com"
        git config --local user.name "grafanabot"
        git commit --message "Update \`make docs\` procedure"
        git push -v origin "refs/heads/${BRANCH}"
      fi

      # Create a PR if one doesn't already exist.
      if ! gh pr view "${BRANCH}"; then
        gh pr create --fill ${PR_OPTIONS}
      fi
    shell: bash
