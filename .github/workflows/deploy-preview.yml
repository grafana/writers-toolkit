name: deploy-preview

on:
  workflow_call:
    inputs:
      # Legacy inputs
      # Don't forget to make `sources` required when you remove these.
      source_directory:
        default: docs/sources
        type: string
      website_directory:
        type: string
      relative_prefix:
        type: string
      index_file: # creates the necessary project _index.md file for versioned repos
        type: boolean
      # End legacy inputs
      sources:
        description: |
          sources is a JSON string describing multiple source mounts.

          It replaces the individual inputs used in the previous version of this action.

          The structure is an array of objects, each with the following keys:

          index_file:
            description: Path to index file used to redirect versioned projects. For example, "content/docs/mimir/_index.md".
            required: true
            type: string
          relative_prefix:
            description: The URL path prefix for the mount destination. For example, "/docs/mimir/latest/".
            required: true
            type: string
          repo:
            description: The Grafana repository name for the source files. For example, "mimir".
            required: true
            type: string
          source_directory:
            description: The path to the source files in the repository. For example, "docs/sources".
            required: true
            type: string
          website_directory:
            description: The path to mount the documentation in the website content structure. For example, "content/docs/mimir/latest".
            required: true
            type: string

          The following example mounts both the Mimir documentation and the mimir-distributed Helm chart documentation:

          [
            {
              "index_file": true,
              "relative_prefix": "/docs/mimir/latest/",
              "repo": "mimir",
              "source_directory": "docs/sources/mimir",
              "website_directory": "content/docs/mimir/latest"
            },
            {
              "index_file": true,
              "relative_prefix": "/docs/helm-charts/mimir-distributed/latest/",
              "repo": "mimir",
              "source_directory": "docs/sources/mimir-distributed",
              "website_directory": "content/docs/helm-charts/mimir-distributed/latest"
            }
          ]
        type: string
      sha:
        required: true
        type: string
      branch:
        required: true
        type: string
      event_number:
        required: true
        type: string
      repo:
        required: true
        type: string
      title:
        required: true
        type: string

env:
  CLOUD_RUN_REGION: us-south1

concurrency:
  group: ${{ github.workflow }}-${{ inputs.repo }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    permissions:
      contents: read # Clone repositories.
      id-token: write # Fetch Vault secrets.
      pull-requests: write # Create or update PR comments.
      statuses: write # Update GitHub status check with deploy preview link.
    runs-on: ubuntu-latest
    steps:
      - name: Find comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        id: fc
        with:
          issue-number: ${{ inputs.event_number }}
          comment-author: "github-actions[bot]"
          body-includes: Deploy preview available

      - name: Update comment with in-progress deploy preview
        if: steps.fc.outputs.comment-id != '' && (github.event.action == 'opened' || github.event.action == 'synchronize')
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ inputs.event_number }}
          edit-mode: append
          append-separator: newline
          body: |
            :building_construction: Updating deploy preview...


      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        if: inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize')
        with:
          persist-credentials: false
          sparse-checkout-cone-mode: false # exclude root files
          sparse-checkout: docs

      - name: Sparse checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        with:
          repository: "grafana/writers-toolkit"
          ref: main
          path: deploy-preview-files
          persist-credentials: false
          sparse-checkout: |
            deploy-preview

      - name: Keep only necessary files
        if: inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize')
        shell: bash
        env:
          SOURCE_DIRECTORY: ${{ inputs.source_directory }}
        run: |
          shopt -s extglob
          rm -rf !(docs|deploy-preview-files|.git)
          ls -al
          ls -al "${SOURCE_DIRECTORY}"
          ls -al deploy-preview-files

      # sparse checkout with cone mode disabled includes root files, even when using exclusions
      # see https://github.com/actions/checkout/issues/1430#issuecomment-1756326892
      - name: Keep only necessary files
        if: "!inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize')"
        shell: bash
        run: |
          shopt -s extglob
          rm -rf !(deploy-preview-files|.git)
          ls -al .
          ls -al deploy-preview-files

      - name: Build website
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        shell: bash
        env:
          # Legacy input.
          SOURCE_DIRECTORY: ${{ inputs.source_directory }}
          WEBSITE_DIRECTORY: ${{ inputs.website_directory }}
          INDEX_FILE: ${{ inputs.index_file }}
          REPO: ${{ inputs.repo }}
          # End legacy input.
          GH_TOKEN: ${{ github.token }}
          SOURCES: ${{ inputs.SOURCES }}
          BRANCH: ${{ inputs.branch }}
        run: ./deploy-preview-files/deploy-preview/build

      - name: Print build header value
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        shell: bash
        env:
          SHA: ${{ inputs.sha }}
        run: |
          printf "%s" "add_header 'Build' '"${SHA}"';" > build.conf

      - uses: google-github-actions/auth@71f986410dfbc7added4569d411d040a91dc6935 # v2.1.8
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        id: gcloud-auth
        with:
          token_format: access_token
          workload_identity_provider: "projects/304398677251/locations/global/workloadIdentityPools/github/providers/github-provider"
          service_account: github-docs-deploy-previews@grafanalabs-workload-identity.iam.gserviceaccount.com
          create_credentials_file: false

      - name: Login to GAR
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcloud-auth.outputs.access_token }}

      - name: Extract metadata (tags, labels) for Docker
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: "us-docker.pkg.dev/grafanalabs-dev/docker-docs-previews-dev/${{ inputs.repo }}"
          tags: |-
            "${{ inputs.sha }}"
            "${{ inputs.event_number }}"

      - name: Set up Docker Buildx
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
        with:
          cache-binary: false
          driver: docker-container

      - name: Build the container
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        id: build
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          file: ./deploy-preview-files/deploy-preview/Dockerfile

      - uses: google-github-actions/auth@71f986410dfbc7added4569d411d040a91dc6935 # v2.1.8
        id: gcloud-auth-cloud-run
        with:
          workload_identity_provider: "projects/304398677251/locations/global/workloadIdentityPools/github/providers/github-provider"
          service_account: "github-docs-cloud-run-dev@grafanalabs-workload-identity.iam.gserviceaccount.com"

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@9c5864eab7354d2e132307e685a2272655932799 # v2.7.3
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        id: deploy
        with:
          image: us-docker.pkg.dev/grafanalabs-dev/docker-docs-previews-dev/${{ inputs.repo }}:${{ inputs.sha }}
          service: deploy-preview-${{ inputs.repo }}-${{ inputs.event_number }}
          project_id: grafanalabs-dev
          region: ${{ env.CLOUD_RUN_REGION }}
          flags: --port=80 --ingress=all --allow-unauthenticated

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a # v2.1.4
        if: github.event.action == 'closed'
        with:
          project_id: grafanalabs-dev

      - name: Delete deploy preview
        if: github.event.action == 'closed'
        env:
          REPO: ${{ inputs.repo }}
          EVENT_NUMBER: ${{ inputs.event_number }}
        run: |
          SERVICE_NAME="deploy-preview-${REPO}-${EVENT_NUMBER}"
          if gcloud run services describe $SERVICE_NAME --region=${{ env.CLOUD_RUN_REGION }} --project=grafanalabs-dev > /dev/null 2>&1; then
            gcloud run services delete $SERVICE_NAME --region=${{ env.CLOUD_RUN_REGION }} --project=grafanalabs-dev --quiet
          else
            echo "Service $SERVICE_NAME does not exist. Skipping step."
          fi

      - name: Send commit status
        uses: ouzi-dev/commit-status-updater@26588d166ff273fc4c0664517359948f7cdc9bf1 # v2.0.2
        if: inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize')
        with:
          name: deploy_preview
          status: "${{ job.status }}"
          url: "${{ steps.deploy.outputs.url }}${{ inputs.relative_prefix }}"

      - name: Send commit status
        uses: ouzi-dev/commit-status-updater@26588d166ff273fc4c0664517359948f7cdc9bf1 # v2.0.2
        if: "!inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize')"
        with:
          name: deploy_preview
          status: "${{ job.status }}"
          url: "${{ steps.deploy.outputs.url }}${{ (fromJSON(inputs.sources))[0].relative_prefix }}"
          description: "Public deploy preview"

      - name: Get preview URLs
        id: urls
        if: "!inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize')"
        shell: bash
        env:
          SOURCES: ${{ inputs.SOURCES }}
          URL: ${{ steps.deploy.outputs.url }}
        run: ./deploy-preview-files/deploy-preview/urls

      - name: Create comment with available deploy preview
        if: inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize') && steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ inputs.event_number }}
          body: |
            :computer: Deploy preview available: ${{ steps.deploy.outputs.url }}${{ inputs.relative_prefix }}

      - name: Create comment with available deploy preview
        if: "!inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize') && steps.fc.outputs.comment-id == ''"
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ inputs.event_number }}
          body: |
            :computer: Deploy preview available:
            ${{ steps.urls.outputs.urls }}

      - name: Update comment with deleted deploy preview
        if: github.event.action == 'closed'
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ inputs.event_number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            :computer: Deploy preview deleted.


      - name: Update comment with available deploy preview
        if: inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize') && steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ inputs.event_number }}
          edit-mode: replace
          body: |
            :computer: Deploy preview available: ${{ steps.deploy.outputs.url }}${{ inputs.relative_prefix }}

      - name: Update comment with available deploy preview
        if: "!inputs.website_directory && (github.event.action == 'opened' || github.event.action == 'synchronize') && steps.fc.outputs.comment-id != ''"
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ inputs.event_number }}
          edit-mode: replace
          body: |
            :computer: Deploy preview available:
            ${{ steps.urls.outputs.urls }}
