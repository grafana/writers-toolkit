name: Documentation CI
description: |
  This action provides consistent steps for documentation CI.

  All steps require the `contents: read` permission


  To use the build step, you'll need the following additional permissions:

  ```yaml
  checks: write
  ```

  To use the Vale step, you'll need the following additional permissions:

  ```yaml
  security-events: write
  ```
on:
  workflow_call:
    inputs:
      build:
        default: false
        description: Whether to test a website build.
        type: boolean
      build-website-directory:
        default: content/docs/test-build
        description: Directory to mount documentation for the build job.
        type: string
      build-website-image:
        default: grafana/docs-base:latest
        description: Container image to run for build-website action.
        type: string
      build-website-source-directory:
        default: docs/sources
        description: Path to source directory for build-website action.
        type: string

      prettier:
        default: false
        description: Whether to enforce prettier formatting.
        type: boolean

      readability:
        default: false
        description: Whether to run the readability report.
        type: boolean

      vale:
        default: false
        description: Whether to run the Vale linter.
        type: boolean
      vale-directory:
        default: docs/sources
        description: Directory containing documentation for linting.
        type: string
      vale-filter:
        default: ""
        description: Vale filter that allows you to report an arbitrary subset of the Grafana style.
        type: string

    secrets:
      GITHUB_TOKEN:
        required: true
jobs:
  prettier:
    if: inputs.prettier
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20
      - run: |
          npm install --no-save prettier
          npx prettier -w docs/sources
          if ! git diff --exit-code; then
            echo 'Not all documentation has been formatted with `prettier`, run `npx prettier -w docs/sources` and commit the result to resolve the issue.'
          fi
  build:
    if: inputs.build
    permissions:
      contents: read
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Build website
        uses: grafana/writers-toolkit/build-website@44d8e2b29fbbdba5c3614ddcfc29be47e5f9e61c # build-website/v1
        with:
          image: ${{ inputs.build-website-image }}
          source_directory: ${{ inputs.build-website-source-directory }}
          website_directory: ${{ inputs.build-website-directory }}

  vale:
    if: inputs.vale
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    container:
      image: grafana/vale:latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
        with:
          persist-credentials: false
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        if: github.event_name == 'push'
        with:
          fetch-depth: 2
          persist-credentials: false
      - uses: grafana/writers-toolkit/vale-action@f49dd90f007967990095ac2d18c5bdf37b412a5f # vale-action/v1.4.5
        with:
          directory: ${{ inputs.vale-directory }}
          filter: ${{ inputs.vale-filter }}

  report-readability:
    if: inputs.readability
    permissions:
      contents: read
      pull-requests: write
    container:
      image: grafana/vale:latest
    name: Report readability
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository with history
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install Bash
        run: apk add bash

      - name: Run tool
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          (cd /etc/vale && vale sync)
          git config --global --add safe.directory /__w/writers-toolkit/writers-toolkit
          touch .output.txt
          for file in $(git --no-pager diff --name-only --diff-filter=ACMRT "${BASE_SHA}" -- docs/sources); do
            ./scripts/readability "${file}" "${BASE_SHA}" ${HEAD_SHA} >> .output.txt
          done
        shell: bash

      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const fs = require("fs");

            const measures = [
              "AutomatedReadability",
              "ColemanLiau",
              "FleschKincaid",
              "FleschReadingEase",
              "GunningFog ",
              "LIX",
              "SMOG",
            ];

            let body = "### Readability report\n";
            body += `| File | ${measures.join(" | ")} |\n`;
            body += `| - |${" - |".repeat(measures.length)}\n`;

            let i = 0;
            const output = fs.readFileSync(".output.txt", "utf-8")
            if (output !== "") {
              output.split("\n").forEach((line) => {
                // docs/sources/_index.md	Grafana.ReadabilityAutomatedReadability	8.99	(Δ+0.84)	aim for below 8.
                const re = new RegExp(
                  "^(?<file>[^\t]+?)\t(?<rule>[^\t]+?)\t(?<score>[^\t]+?)\t(?<delta>[^\t]+?)\t(?<guide>[^\t]+?)$",
                );
                const result = re.exec(line);

                if (result !== null) {
                  const { file, rule, score, delta, guide } = result.groups;

                  if (i === 0) {
                    body += `| ${file} |`;
                  }

                  let color = "green";
                  const fl = parseFloat(delta.replace(new RegExp("\\(Δ(.+)\\)"), "$1"));
                  if (
                    (rule !== "Grafana.ReadabilityFleschReadingEase" && fl > 0) ||
                    (rule === "Grafana.ReadabilityFleschReadingEase" && fl < 0)
                  ) {
                    color = "red";
                  }
                  if (fl === 0) {
                    color = "black";
                  }

                  body += " $${" + score + "\\space\\color{" + color + "}" + delta + "}$$ |";

                  if (i === measures.length - 1) {
                    body += "\n";
                  }

                  i = (i + 1) % measures.length;
                }
              });

              body += `<details>
              <summary>View metric targets</summary>

              | Metric | Range | Ideal score |
              | --- | --- | --- |
              | [AutomatedReadability](https://en.wikipedia.org/wiki/Automated_readability_index) | 6 (very easy read) to 14 (extremely difficult read) | 8 or less |
              | [ColemanLiau](https://en.wikipedia.org/wiki/Coleman%E2%80%93Liau_index) | 6 (very easy read) to 17 (extremely difficult read) |  9 or less |
              | [FleschKincaid](https://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_tests) | 6 (very easy read) to 17 (extremely difficult read) | 8 or less |
              | [FleschReadingEase](https://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_tests) | 100 (very easy read) to 0 (extremely difficult read) |  70 or more |
              | [GunningFog](https://en.wikipedia.org/wiki/Gunning_fog_index) | 6 (very easy read) to 17 (extremely difficult read) | 10 or less |
              | [LIX](https://en.wikipedia.org/wiki/Lix_(readability_test)) | 20 (very easy read) to 60+ (extremely difficult read) |  35 or less |
              | [SMOG](https://en.wikipedia.org/wiki/SMOG) | 6 (very easy read) to 17 (extremely difficult read) |  10 or less |

              </details>`;

              const {data: comments} = await github.rest.issues.listComments({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
              });

              const existing = comments.filter((comment) => comment.body.match(new RegExp("^### Readability report")))
              if (existing.length > 0) {
                github.rest.issues.updateComment({
                  comment_id: existing[0].id,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body,
                })
              } else {
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body,
                })
              }
            }
