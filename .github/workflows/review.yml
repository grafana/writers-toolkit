name: Check for pages that require review

permissions: {}
on:
  schedule:
    - cron: "0 7 * * 1-5"
  workflow_dispatch:

jobs:
  main:
    if: github.repository == 'grafana/writers-toolkit'
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Setup Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: 1.21

      - name: Build tool
        working-directory: tools
        run: go build ./cmd/review

      - name: Run tool
        run: ./tools/review ./docs/sources | head -n 3 > .to-review.txt

      - name: Create issues
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const fs = require('fs')

            const opts = github.rest.issues.listForRepo.endpoint.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
            });
            const issues = await github.paginate(opts);

            fs.readFileSync(".to-review.txt", "utf-8")
              .split("\n")
              .forEach((line) => {
                const path = line.replace(/:1:1$/, "");
                const title = `Review \`${path}\``;

                if (path === "") {
                  return
                }

                for (const issue of issues) {
                  if (issue.pull_request) {
                    continue
                  }

                  if (issue.title === title && issue.state === 'open') {
                    return
                  }
                }

                github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title,
                  assignees: ['jdbaldry'],
                });
              });
